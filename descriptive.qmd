---
title: Descriptive statistics of read counts
---

```{r libraries}
#| results: hide
.packages <- c("knitr", "tidyverse", "kableExtra", "edgeR")
.installed <- .packages %in% installed.packages()
if (length(.packages[!.installed])>0) install.packages(.packages[!.installed])
lapply(.packages, library, character.only=T)
```

```{r colors}
color1 <- "#00BFC4"
color2 <- "#F8766D"
color3 <- "#7CAE00"
color4 <- "#C77CFF"
```

```{r data-loading}
# reads counts summary
source("preprocesing.R")
```

## Distribution of total reads counts by gene

```{r distribution-total-reads-by-gene}
df_reads_longer %>%
    group_by(CLUSTER) %>%
    summarise(`Total counts` = sum(Count)) %>%
    ggplot(aes(x = `Total counts`)) +
    geom_histogram(fill = color1) + 
    labs(title = "Distribution of total reads counts by gene", x = "Total counts", y = "Genes")
```

```{r frequencies-low-high-expressed-genes}
df_counts <- df_reads_longer %>%
    group_by(CLUSTER) %>%
    summarise(`Total counts` = cut(sum(Count), breaks=c(0,20, Inf), include.lowest = T)) 
    
table(df_counts$`Total counts`) %>% kable(caption = paste0("Number of genes with a total reads counts below or above 20.")) %>%
  kable_styling(bootstrap_options = "hover", full_width = F)

df_counts_group <- df_reads_longer %>%
    group_by(CLUSTER, Group) %>%
    summarise(`Total counts` = cut(sum(Count), breaks=c(0,10, Inf), include.lowest = T)) 

table(df_counts_group$`Total counts`, df_counts_group$Group) %>% kable(caption = paste0("Number of genes with a total reads counts below or above 10 by Group.")) %>%
  kable_styling(bootstrap_options = "hover", full_width = F)
```

## Filter genes with low expression

We are going to filter genes with more than 1 reads per million in at least 7 individuals.

Number of genes removed: `r length(keep)-sum(keep)`

## Reads counts summary

```{r reads-summary}
df_reads_filtered_longer %>% 
    group_by(Group, Id) %>%
    summarise(`Total counts` = sum(Count)) %>%
    kable(caption = paste0("Total number of reads per individual.")) %>%
  kable_styling(bootstrap_options = "hover", full_width = F)
```

```{r total-reads-distribution}
df_reads_filtered_longer %>% 
    group_by(Group, Id) %>%
    summarise(`Total counts` = sum(Count)) %>%
    ggplot(aes(x = Id, weight = `Total counts`, fill = Group)) +
    geom_bar() +
    labs(title = "Total number of reads per individual", x = "Sample", y = "Total counts")
```



## Reads distributions per individual

```{r reads-distribution}
reads_filtered_cpm_longer %>%
    mutate(log2CPM = log2(CPM)) %>%
    ggplot(aes(y = log2CPM, x = Id, fill = Group)) +
    geom_boxplot() +
    labs(title = "Box plot of the log 2 reads counts per million per sample", x = "Sample")
```

## Hierarchical clustering

<!-- plot(hclust(dist(t(reads$counts)))) -->

## Multidimensional scaling

```{r multidimensional-scaling}
plotMDS(reads_filtered, col = as.numeric(df_groups$Group))
```



